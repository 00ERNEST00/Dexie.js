!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("dexie"),require("dexie-observable")):"function"==typeof define&&define.amd?define(["dexie","dexie-observable"],n):(e.Dexie=e.Dexie||{},e.Dexie.Syncable=n(e.Dexie,e.dexieObservable))}(this,function(e,n){"use strict";function t(n){function s(t,r,c,a,s){function p(){return n._localSyncNode&&n._localSyncNode.id===s}function N(t){return n.transaction("rw",n._syncNodes,function(){if(!c)throw new Error("Url cannot be empty");return n._syncNodes.where("url").equalsIgnoreCase(c).first(function(i){function a(n,t){this.nodeID=n,t&&e.extend(this,t)}return a.prototype.save=function(){return e.vip(function(){return i.save()})},i?(i.syncContext=new a(i.id,i.syncContext),i.syncProtocol=r,n._syncNodes.put(i)):(i=new n.observable.SyncNode,i.myRevision=-1,i.appliedRemoteRevision=null,i.remoteBaseRevisions=[],i.type="remote",i.syncProtocol=r,i.url=c,i.syncOptions=t,i.lastHeartBeat=Date.now(),i.dbUploadState=null,o.resolve(function(){if(t.initialUpload===!1)return n._changes.lastKey(function(e){i.myRevision=e})}).then(function(){n._syncNodes.add(i).then(function(e){i.syncContext=new a(e),n._syncNodes.put(i)})})),i})})}function R(r){function d(e){r.status!==e&&(r.status=e,r.save().then(function(){n.syncable.on.statusChanged.fire(e,c),n.broadcastMessage("syncStatusChanged",{newStatus:e,url:c},!1)}).catch("DatabaseClosedError",function(){}))}function N(){return u(N,function(){return O(r,function(n,i,s,u){function l(){return Object.keys(u).forEach(function(n){e.setByKeyPath(r,n,u[n])}),f.then(I),r.save()}var f=new o(function(o,u){C=function(e){u(e)},e.asap(function(){function e(e,n){u(e),p()&&(!isNaN(n)&&n<1/0?(setTimeout(function(){p()&&(d(b.SYNCING),N().catch("DatabaseClosedError",R))},n),d(b.ERROR_WILL_RETRY,e),x&&x.disconnect&&x.disconnect(),x=null):R(e))}try{t.sync(r.syncContext,c,a,i,r.appliedRemoteRevision,n,s,S,l,function(e){o(e)},e)}catch(n){e(n,1/0)}})});return f.then(function(){}).finally(function(){C=null})})},s)}function R(e){w.disconnect(b.ERROR,e)}function g(e){if(0===e.remoteBaseRevisions.length)return{maxClientRevision:1/0,remoteBaseRevision:null};for(var n=e.remoteBaseRevisions.length-1;n>=0;--n)if(e.myRevision>=e.remoteBaseRevisions[n].local)return{maxClientRevision:n===e.remoteBaseRevisions.length-1?1/0:e.remoteBaseRevisions[n+1].local,remoteBaseRevision:e.remoteBaseRevisions[n].remote};return{maxClientRevision:e.remoteBaseRevisions[0].local,remoteBaseRevision:null}}function O(n,t){return E(n,function r(o,i,c,a){return 0===o.length&&"myRevision"in a&&a.myRevision!==n.myRevision?(Object.keys(a).forEach(function(t){e.setByKeyPath(n,t,a[t])}),n.save().catch("DatabaseClosedError",function(e){}),E(n,r)):t(o,i,c,a)})}function E(t,r){function i(e,o,a){var s=!1;return a.until(function(){if(o.length===m)return s=!0,!0}).each(function(n,t){o.push({type:y,table:e.currentTable,key:t.key,obj:t.value}),e.currentKey=t.key}).then(function(){if(s)return _=!0,r(o,null,!0,{dbUploadState:e});if(0===e.tablesToUpload.length){var a=g(t);return c(e.localBaseRevision,m-o.length,a.maxClientRevision,function(e,n,t){return o=o.concat(e),t.dbUploadState=null,r(o,a.remoteBaseRevision,n,t)})}return e.currentTable=e.tablesToUpload.shift(),i(e,o,n.table(e.currentTable).orderBy(":id"))})}function c(e,r,o,i){var c={},a=0,s=!1,u=t.id,d=e;return n.transaction("r",n._changes,function(){var t=n._changes.where("rev").between(e,o,!1,!0);return t.until(function(){if(a===r)return s=!0,!0}).each(function(e){if(d=e.rev,e.source!==u){var n={type:e.type,table:e.table,key:e.key};e.type===y?n.obj=e.obj:e.type===h&&(n.mods=e.mods);var t=e.table+":"+e.key,r=c[t];if(r){var o=n,i=function(){switch(r.type){case y:switch(o.type){case y:return o;case h:return l(r,o);case v:return o}break;case h:switch(o.type){case y:return o;case h:return f(r,o);case v:return o}break;case v:switch(o.type){case y:return o;case h:return r;case v:return r}}}();c[t]=i}else c[t]=n,++a}})}).then(function(){var e=Object.keys(c).map(function(e){return c[e]});return _=s,i(e,s,{myRevision:d})})}if(t.myRevision>=0){var a=g(t);return c(t.myRevision,m,a.maxClientRevision,function(e,n,t){return r(e,a.remoteBaseRevision,n,t)})}if(null===t.dbUploadState){var s=n.tables.filter(function(e){return e.schema.observable}).map(function(e){return e.name});if(0===s.length)return o.resolve(r([],null,!1,{}));var u={tablesToUpload:s,currentTable:s.shift(),currentKey:null};return n._changes.orderBy("rev").last(function(e){u.localBaseRevision=e&&e.rev||0;var t=n.table(u.currentTable).orderBy(":id");return i(u,[],t)})}if(t.dbUploadState.currentKey){var d=n.table(t.dbUploadState.currentTable).where(":id").above(t.dbUploadState.currentKey);return i(e.deepClone(t.dbUploadState),[],d)}var d=n.table(u.currentTable).orderBy(":id");return i(e.deepClone(t.dbUploadState),[],d)}function S(t,c,a,l){function f(e){return n.transaction("rw!",n._uncommittedChanges,function(){return n._uncommittedChanges.bulkAdd(e.map(function(e){var n={node:r.id,type:e.type,table:e.table,key:e.key};return e.obj&&(n.obj=e.obj),e.mods&&(n.mods=e.mods),n}))}).then(function(){return r.appliedRemoteRevision=c,r.save()})}function d(t,c){var a=n.tables.filter(function(e){return"_changes"===e.name||"_uncommittedChanges"===e.name||e.schema.observable});return n.transaction("rw!",a,function(){function a(e,t){var r=e.length;if(t>=r)return o.resolve(null);var i=e[t],c=void 0,u=void 0;for(c=t+1;c<r&&(u=e[c],u.type===i.type&&u.table===i.table);++c);var l=n.table(i.table),f=!l.schema.primKey.keyPath,d=e.slice(t,c),b=i.type,m=b===y?l.bulkPut(d.map(function(e){return e.obj}),f?d.map(function(e){return e.key}):void 0):b===h?s(l,d):b===v?l.bulkDelete(d.map(function(e){return e.key})):o.resolve(null);return m.then(function(){return a(e,c)})}function s(e,n){var t=n.map(function(e){return e.key}),r={};return e.where(":id").anyOf(t).raw().each(function(e,n){r[n.primaryKey+""]=e}).then(function(){var t=n.filter(function(e){return r.hasOwnProperty(e.key+"")}),o=t.map(function(e){var n=r[e.key+""];return Object.keys(e.mods).forEach(function(t){i(n,t,e.mods[t])}),n});return e.bulkPut(o)})}var u=e.currentTransaction,l=0;return n._changes.orderBy("rev").last(function(e){l=e&&e.rev||0}).then(function(){return u.source=r.id,n._uncommittedChanges.where("node").equals(r.id).toArray()}).then(function(e){return a(e,0)}).then(function(){return n._uncommittedChanges.where("node").equals(r.id).delete()}).then(function(){return a(t,0)}).then(function(){return n._changes.orderBy("rev").last()}).then(function(e){var n=e&&e.rev||0;if(r.appliedRemoteRevision=c,r.remoteBaseRevisions.push({remote:c,local:n}),r.myRevision===l&&(r.myRevision=n),r.remoteBaseRevisions.length>1)for(var t=r.remoteBaseRevisions.length-1;t>0;--t)if(r.myRevision>=r.remoteBaseRevisions[t].local){r.remoteBaseRevisions.splice(0,t);break}r.save().catch(function(e){console.warn("Dexie.Syncable: Unable to save SyncNode after applying remote changes: "+(e.stack||e))})})})}return u(S,function(){return p()?(a?f(t):d(t,c)).catch(function(e){return R(e),o.reject(e)}):o.reject(new e.DatabaseClosedError)},s)}function I(e){return p()?(x=e,w.on("disconnect",function(){if(x){if(x.react)try{x.disconnect()}catch(e){}x=null}}),void(e.react?k(e):B(e))):void(e.disconnect&&e.disconnect())}function k(t){function o(){x&&(d(b.SYNCING),a?c=!0:i())}function i(){x&&(c=!1,a=!0,O(r,function(n,o,s,u){x&&(n.length>0?t.react(n,o,s,function(){Object.keys(u).forEach(function(n){e.setByKeyPath(r,n,u[n])}),r.save().catch("DatabaseClosedError",function(e){}),i()}):(a=!1,c?i():d(b.ONLINE)))}).catch(function(e){console.error("Got "+e.message+" caught by reactToChanges"),R(e)}))}var c,a;n.on("changes",o),w.on("disconnect",function(){n.on.changes.unsubscribe(o)}),i()}function B(){function n(){O(r,function(o,i,s,u){function l(){Object.keys(u).forEach(function(n){e.setByKeyPath(r,n,u[n])}),r.save().catch("DatabaseClosedError",function(e){})}function f(e){x&&(x=e,s?n():!isNaN(e.again)&&e.again<1/0?(d(b.ONLINE),setTimeout(function(){x&&(d(b.SYNCING),n())},e.again)):w.disconnect(b.OFFLINE))}function y(e,t){!isNaN(t)&&t<1/0?x&&(setTimeout(function(){x&&(d(b.SYNCING),n())},t),d(b.ERROR_WILL_RETRY)):R(e)}t.sync(r.syncContext,c,a,i,r.appliedRemoteRevision,o,s,S,l,f,y)}).catch(R)}_?n():x&&!isNaN(x.again)&&x.again<1/0&&(d(b.ONLINE),setTimeout(function(){x&&(d(b.SYNCING),n())},x.again))}w.on("disconnect",function(e){isNaN(e)||d(e)});var x;return d(b.CONNECTING),N()}var g=d.filter(function(e){return e.url===c});if(g.length>0)return g[0].connectPromise;var O=N(a).then(function(e){return R(e)}),C=null,E=!1,_=!0,w={url:c,status:b.OFFLINE,connectPromise:O,on:e.Events(null,"disconnect"),disconnect:function(e,n){var t=d.indexOf(w);t>=0&&d.splice(t,1),n&&C&&C(n),E||w.on.disconnect.fire(e,n),E=!0}};return d.push(w),O}function u(t,r,i){function c(){return t.ongoingOperation?t.ongoingOperation=t.ongoingOperation.then(function(){return u(t,r,i)}):t.ongoingOperation=e.ignoreTransaction(function(){return e.vip(function(){return r()})}).finally(function(){delete t.ongoingOperation}),t.ongoingOperation}return i?n._localSyncNode&&i===n._localSyncNode.id?c():o.reject(new a):n.isOpen()?c():o.reject(new a)}function l(n,t){var r=e.deepClone(n);return Object.keys(t.mods).forEach(function(e){i(r.obj,e,t.mods[e])}),r}function f(n,t){var r=e.deepClone(n);return Object.keys(t.mods).forEach(function(e){var o=!1;Object.keys(n.mods).filter(function(n){return 0===e.indexOf(n+".")}).forEach(function(n){i(r.mods[n],e.substr(n.length+1),t.mods[e]),o=!0}),o||(r.mods[e]=t.mods[e]),Object.keys(n.mods).filter(function(n){return 0===n.indexOf(e+".")}).forEach(function(e){delete r.mods[e]})}),r}var d=[],y=1,h=2,v=3,b=t.Statuses,m=1e3;n.on("message",function(t){e.vip(function(){"connect"===t.type?n.syncable.connect(t.protocolName,t.url,t.options).then(t.resolve,t.reject):"disconnect"===t.type?n.syncable.disconnect(t.url).then(t.resolve,t.reject):"syncStatusChanged"===t.type&&n.syncable.on.statusChanged.fire(t.newStatus,t.url)})}),n.on("cleanup",function(t){t&&e.ignoreTransaction(function(){return e.vip(function(){return n._syncNodes.where({type:"remote"}).filter(function(e){return e.status!==b.OFFLINE}).toArray(function(e){return o.all(e.map(function(e){return n.syncable.connect(e.syncProtocol,e.url,e.syncOptions).catch(function(n){console.warn("Dexie.Syncable: Could not connect to "+e.url+". "+(n.stack||n))})}))})})}).catch("DatabaseClosedError",function(){})}),n.on("ready",function(){n._localSyncNode&&n._localSyncNode.isMaster&&n._syncNodes.where("type").equals("remote").and(function(e){return e.status!==b.OFFLINE}).toArray(function(e){e.forEach(function(e){return n.syncable.connect(e.syncProtocol,e.url,e.syncOptions).catch(function(){})})}).catch("DatabaseClosedError",function(){})},!0),n.syncable={},n.syncable.getStatus=function(r,i){return n.isOpen()?e.vip(function(){return n._syncNodes.where("url").equals(r).first(function(e){return e?e.status:b.OFFLINE})}).then(i):o.resolve(t.Statuses.OFFLINE).then(i)},n.syncable.list=function(){return n.transaction("r?",n._syncNodes,function(){return n._syncNodes.where("type").equals("remote").toArray(function(e){return e.map(function(e){return e.url})})})},n.syncable.on=e.Events(n,{statusChanged:"asap"}),n.syncable.disconnect=function(t){return e.ignoreTransaction(function(){return o.resolve().then(function(){return n._localSyncNode&&n._localSyncNode.isMaster?o.all(d.filter(function(e){return e.url===t}).map(function(e){return e.disconnect(b.OFFLINE)})):n._syncNodes.where("isMaster").above(0).first(function(e){return n.sendMessage("disconnect",{url:t},e.id,{wantReply:!0})})}).then(function(){return n._syncNodes.where("url").equals(t).modify(function(e){e.status=b.OFFLINE})})})},n.syncable.connect=function(r,i,c){c=c||{};var a=t.registeredProtocols[r];if(a){if(n.isOpen()){if(!n._localSyncNode)throw new Error("Precondition failed: local sync node is missing. Make sure Dexie.Observable is active!");return n._localSyncNode.isMaster?s(a,r,i,c,n._localSyncNode.id):n.table("_syncNodes").where("isMaster").above(0).first(function(e){return n.sendMessage("connect",{protocolName:r,url:i,options:c},e.id,{wantReply:!0})})}if(n.hasBeenClosed())return o.reject(new e.DatabaseClosedError);if(n.hasFailed())return o.reject(new e.InvalidStateError("Dexie.Syncable: Cannot connect. Database has failed to open"));var u=new o(function(t,o){n.on("ready",function(){return n._syncNodes.get({url:i},function(e){var a=n.syncable.connect(r,i,c);if(a.then(t,o),!e||!e.appliedRemoteRevision)return a})}),n.open().catch(function(n){o(new e.InvalidStateError("Dexie.Syncable: Couldn't connect. Database failed to open",n))})});return u}return o.reject(new Error("ISyncProtocol '"+r+"' is not registered in Dexie.Syncable.registerSyncProtocol()"))},n.syncable.delete=function(e){return n.syncable.disconnect(e).then(function(){return n.transaction("rw!",n._syncNodes,n._changes,n._uncommittedChanges,function(){return n._syncNodes.where("url").equals(e).toArray(function(e){return e.map(function(e){return e.id})}).then(function(e){return n._syncNodes.where("id").anyOf(e).delete()}).then(function(){return n._uncommittedChanges.where("node").anyOf(nodeIDs).delete()})}).then(function(){c.deleteOldChanges()})})},n.syncable.unsyncedChanges=function(e){return n._syncNodes.where("url").equals(e).first(function(e){return n._changes.where("rev").above(e.myRevision).toArray()})},n.close=r(n.close,function(e){return function(){return d.forEach(function(e){e.disconnect()}),e.apply(this,arguments)}});n.observable.SyncNode.prototype.save=function(){var e=this;return n.transaction("rw?",n._syncNodes,function(){return n._syncNodes.put(e)})}}e="default"in e?e.default:e;var r=e.override,o=e.Promise,i=e.setByKeyPath,c=e.Observable,a=e.DatabaseClosedError;return t.Statuses={ERROR:-1,OFFLINE:0,CONNECTING:1,ONLINE:2,SYNCING:3,ERROR_WILL_RETRY:4},t.StatusTexts={"-1":"ERROR",0:"OFFLINE",1:"CONNECTING",2:"ONLINE",3:"SYNCING",4:"ERROR_WILL_RETRY"},t.registeredProtocols={},t.registerSyncProtocol=function(e,n){t.registeredProtocols[e]=n},e.Syncable=t,e.addons.push(t),t});
//# sourceMappingURL=dexie-syncable.min.js.map